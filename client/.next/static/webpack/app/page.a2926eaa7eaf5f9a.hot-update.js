"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateStatistics: function() { return /* binding */ calculateStatistics; },\n/* harmony export */   capitalizeFirstLetter: function() { return /* binding */ capitalizeFirstLetter; },\n/* harmony export */   cn: function() { return /* binding */ cn; },\n/* harmony export */   filterApplications: function() { return /* binding */ filterApplications; },\n/* harmony export */   getStatusColor: function() { return /* binding */ getStatusColor; },\n/* harmony export */   handleExport: function() { return /* binding */ handleExport; }\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(app-pages-browser)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(app-pages-browser)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn() {\n    for(var _len = arguments.length, inputs = new Array(_len), _key = 0; _key < _len; _key++){\n        inputs[_key] = arguments[_key];\n    }\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\nconst filterApplications = (applications, searchTerm)=>{\n    return applications.filter((app)=>app.company.toLowerCase().includes(searchTerm.toLowerCase()) || app.position.toLowerCase().includes(searchTerm.toLowerCase()));\n};\nconst calculateStatistics = (applications)=>{\n    const totalApplications = applications.length;\n    const statusCounts = applications.reduce((acc, app)=>{\n        acc[app.status] = (acc[app.status] || 0) + 1;\n        return acc;\n    }, {});\n    const applicationsByMonth = applications.reduce((acc, app)=>{\n        const month = new Date(app.date).toLocaleString(\"default\", {\n            month: \"short\"\n        });\n        acc[month] = (acc[month] || 0) + 1;\n        return acc;\n    }, {});\n    const topCompanies = applications.reduce((acc, app)=>{\n        acc[app.company] = (acc[app.company] || 0) + 1;\n        return acc;\n    }, {});\n    const sortedTopCompanies = Object.entries(topCompanies).sort((a, b)=>b[1] - a[1]).slice(0, 5);\n    const locationCounts = applications.reduce((acc, app)=>{\n        acc[app.location] = (acc[app.location] || 0) + 1;\n        return acc;\n    }, {});\n    return {\n        totalApplications,\n        statusCounts,\n        applicationsByMonth,\n        sortedTopCompanies,\n        locationCounts\n    };\n};\nconst getStatusColor = (status)=>{\n    switch(status){\n        case \"applied\":\n            return \"bg-blue-500 text-white\";\n        case \"interviewing\":\n            return \"bg-yellow-500 text-white\";\n        case \"offered\":\n            return \"bg-green-500 text-white\";\n        case \"rejected\":\n            return \"bg-red-500 text-white\";\n    }\n};\nconst handleExport = (appArray)=>{\n    const csvContent = \"data:text/csv;charset=utf-8,\" + \"Company,Position,Status,Date,Location\\n\" + appArray.map((app)=>\"\".concat(app.company, \",\").concat(app.position, \",\").concat(app.status, \",\").concat(app.date, \",\").concat(app.location)).join(\"\\n\");\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"job_applications.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n};\nconst capitalizeFirstLetter = (str)=>{\n    return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDTDtJQUMxQkEsS0FBS00sS0FBSztJQUNWTCxTQUFTRyxJQUFJLENBQUNHLFdBQVcsQ0FBQ1A7QUFDNUIsRUFBRTtBQUVLLE1BQU1RLHdCQUF3QixDQUFDQztJQUNwQyxPQUFPQSxJQUFJQyxNQUFNLENBQUMsR0FBR0MsV0FBVyxLQUFLRixJQUFJcEIsS0FBSyxDQUFDO0FBQ2pELEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3V0aWxzLnRzP2Y3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xzeCwgdHlwZSBDbGFzc1ZhbHVlIH0gZnJvbSBcImNsc3hcIlxuaW1wb3J0IHsgdHdNZXJnZSB9IGZyb20gXCJ0YWlsd2luZC1tZXJnZVwiXG5cbmltcG9ydCB7IEFwcGxpY2F0aW9uIH0gZnJvbSBcIi4vdHlwZXNcIlxuXG5leHBvcnQgZnVuY3Rpb24gY24oLi4uaW5wdXRzOiBDbGFzc1ZhbHVlW10pIHtcbiAgcmV0dXJuIHR3TWVyZ2UoY2xzeChpbnB1dHMpKVxufVxuXG5leHBvcnQgY29uc3QgZmlsdGVyQXBwbGljYXRpb25zID0gKGFwcGxpY2F0aW9uczogQXBwbGljYXRpb25bXSwgc2VhcmNoVGVybTogc3RyaW5nKSA9PiB7XG4gIHJldHVybiBhcHBsaWNhdGlvbnMuZmlsdGVyKFxuICAgIChhcHApID0+XG4gICAgICBhcHAuY29tcGFueS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFRlcm0udG9Mb3dlckNhc2UoKSkgfHxcbiAgICAgIGFwcC5wb3NpdGlvbi50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFRlcm0udG9Mb3dlckNhc2UoKSlcbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjYWxjdWxhdGVTdGF0aXN0aWNzID0gKGFwcGxpY2F0aW9uczogQXBwbGljYXRpb25bXSkgPT4ge1xuICBjb25zdCB0b3RhbEFwcGxpY2F0aW9ucyA9IGFwcGxpY2F0aW9ucy5sZW5ndGg7XG5cbiAgY29uc3Qgc3RhdHVzQ291bnRzID0gYXBwbGljYXRpb25zLnJlZHVjZSgoYWNjOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+LCBhcHApID0+IHtcbiAgICBhY2NbYXBwLnN0YXR1c10gPSAoYWNjW2FwcC5zdGF0dXNdIHx8IDApICsgMTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG5cbiAgY29uc3QgYXBwbGljYXRpb25zQnlNb250aCA9IGFwcGxpY2F0aW9ucy5yZWR1Y2UoKGFjYzogUmVjb3JkPHN0cmluZywgbnVtYmVyPiwgYXBwKSA9PiB7XG4gICAgY29uc3QgbW9udGggPSBuZXcgRGF0ZShhcHAuZGF0ZSkudG9Mb2NhbGVTdHJpbmcoJ2RlZmF1bHQnLCB7IG1vbnRoOiAnc2hvcnQnIH0pO1xuICAgIGFjY1ttb250aF0gPSAoYWNjW21vbnRoXSB8fCAwKSArIDE7XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pO1xuXG4gIGNvbnN0IHRvcENvbXBhbmllcyA9IGFwcGxpY2F0aW9ucy5yZWR1Y2UoKGFjYzogUmVjb3JkPHN0cmluZywgbnVtYmVyPiwgYXBwKSA9PiB7XG4gICAgYWNjW2FwcC5jb21wYW55XSA9IChhY2NbYXBwLmNvbXBhbnldIHx8IDApICsgMTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG5cbiAgY29uc3Qgc29ydGVkVG9wQ29tcGFuaWVzID0gT2JqZWN0LmVudHJpZXModG9wQ29tcGFuaWVzKVxuICAgIC5zb3J0KChhLCBiKSA9PiBiWzFdIC0gYVsxXSlcbiAgICAuc2xpY2UoMCwgNSk7XG5cbiAgY29uc3QgbG9jYXRpb25Db3VudHMgPSBhcHBsaWNhdGlvbnMucmVkdWNlKChhY2M6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4sIGFwcCkgPT4ge1xuICAgIGFjY1thcHAubG9jYXRpb25dID0gKGFjY1thcHAubG9jYXRpb25dIHx8IDApICsgMTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG5cbiAgcmV0dXJuIHtcbiAgICB0b3RhbEFwcGxpY2F0aW9ucyxcbiAgICBzdGF0dXNDb3VudHMsXG4gICAgYXBwbGljYXRpb25zQnlNb250aCxcbiAgICBzb3J0ZWRUb3BDb21wYW5pZXMsXG4gICAgbG9jYXRpb25Db3VudHMsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0U3RhdHVzQ29sb3IgPSAoc3RhdHVzOiBzdHJpbmcpID0+IHtcbiAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICBjYXNlICdhcHBsaWVkJzpcbiAgICAgIHJldHVybiAnYmctYmx1ZS01MDAgdGV4dC13aGl0ZSc7XG4gICAgY2FzZSAnaW50ZXJ2aWV3aW5nJzpcbiAgICAgIHJldHVybiAnYmcteWVsbG93LTUwMCB0ZXh0LXdoaXRlJztcbiAgICBjYXNlICdvZmZlcmVkJzpcbiAgICAgIHJldHVybiAnYmctZ3JlZW4tNTAwIHRleHQtd2hpdGUnO1xuICAgIGNhc2UgJ3JlamVjdGVkJzpcbiAgICAgIHJldHVybiAnYmctcmVkLTUwMCB0ZXh0LXdoaXRlJztcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGhhbmRsZUV4cG9ydCA9IChhcHBBcnJheSA6IGFueSkgPT4ge1xuICBjb25zdCBjc3ZDb250ZW50ID1cbiAgICBcImRhdGE6dGV4dC9jc3Y7Y2hhcnNldD11dGYtOCxcIiArXG4gICAgXCJDb21wYW55LFBvc2l0aW9uLFN0YXR1cyxEYXRlLExvY2F0aW9uXFxuXCIgK1xuICAgIGFwcEFycmF5XG4gICAgICAubWFwKFxuICAgICAgICAoYXBwIDogQXBwbGljYXRpb24pID0+XG4gICAgICAgICAgYCR7YXBwLmNvbXBhbnl9LCR7YXBwLnBvc2l0aW9ufSwke2FwcC5zdGF0dXN9LCR7YXBwLmRhdGV9LCR7YXBwLmxvY2F0aW9ufWBcbiAgICAgIClcbiAgICAgIC5qb2luKFwiXFxuXCIpO1xuXG4gIGNvbnN0IGVuY29kZWRVcmkgPSBlbmNvZGVVUkkoY3N2Q29udGVudCk7XG4gIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcbiAgbGluay5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsIGVuY29kZWRVcmkpO1xuICBsaW5rLnNldEF0dHJpYnV0ZShcImRvd25sb2FkXCIsIFwiam9iX2FwcGxpY2F0aW9ucy5jc3ZcIik7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7XG4gIGxpbmsuY2xpY2soKTtcbiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjYXBpdGFsaXplRmlyc3RMZXR0ZXIgPSAoc3RyIDogc3RyaW5nKSA9PiB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG4iXSwibmFtZXMiOlsiY2xzeCIsInR3TWVyZ2UiLCJjbiIsImlucHV0cyIsImZpbHRlckFwcGxpY2F0aW9ucyIsImFwcGxpY2F0aW9ucyIsInNlYXJjaFRlcm0iLCJmaWx0ZXIiLCJhcHAiLCJjb21wYW55IiwidG9Mb3dlckNhc2UiLCJpbmNsdWRlcyIsInBvc2l0aW9uIiwiY2FsY3VsYXRlU3RhdGlzdGljcyIsInRvdGFsQXBwbGljYXRpb25zIiwibGVuZ3RoIiwic3RhdHVzQ291bnRzIiwicmVkdWNlIiwiYWNjIiwic3RhdHVzIiwiYXBwbGljYXRpb25zQnlNb250aCIsIm1vbnRoIiwiRGF0ZSIsImRhdGUiLCJ0b0xvY2FsZVN0cmluZyIsInRvcENvbXBhbmllcyIsInNvcnRlZFRvcENvbXBhbmllcyIsIk9iamVjdCIsImVudHJpZXMiLCJzb3J0IiwiYSIsImIiLCJzbGljZSIsImxvY2F0aW9uQ291bnRzIiwibG9jYXRpb24iLCJnZXRTdGF0dXNDb2xvciIsImhhbmRsZUV4cG9ydCIsImFwcEFycmF5IiwiY3N2Q29udGVudCIsIm1hcCIsImpvaW4iLCJlbmNvZGVkVXJpIiwiZW5jb2RlVVJJIiwibGluayIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNsaWNrIiwicmVtb3ZlQ2hpbGQiLCJjYXBpdGFsaXplRmlyc3RMZXR0ZXIiLCJzdHIiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/utils.ts\n"));

/***/ })

});